name: Deploy Artifacts

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        description: Version to author
    # secrets:
    #   SSHKEY:
    #     required: true


jobs:
  upload_artifacts:
    name: Deploy Artifacts ${{ matrix.arch }}-${{ matrix.platform }}
    runs-on:
      - self-hosted
      - linux
      - repo-release
    environment: release
    strategy:
      matrix:
        host:
          - x86_64
          - aarch64
        target:
          - x86_64
          - aarch64
    # env:
    #   SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    #   SSHKEY: ${{ secrets.SSHKEY }}
    steps:

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: toolchain-${{ matrix.host }}-${{ matrix.target }}-linux-gnu.tar.xz
        path: release-artifacts/

    # - name: Setup Private Key
    #   run: |
    #     ssh-agent -a $SSH_AUTH_SOCK > /dev/null
    #     echo "${SSHKEY}" | tr -d '\r' | ssh-add -

    # - name: Setup Private Key
    #   run: |
    #     mkdir -p /home/runner/.ssh
    #     touch /home/runner/.ssh/known_hosts
    #     ssh-keyscan d1.h4.cx >> /home/runner/.ssh/known_hosts

    # - name: Ensure Toolchain Directory Exists
    #   run: |
    #     ssh cicd@d1.h4.cx mkdir -p /var/www/woz.io/relenv/${{ inputs.version }}/toolchain/${{ matrix.host }}/

    # - name: "Deploy Toolchain: ${{ matrix.host }}/${{ matrix.target }}-linux-gnu.tar.xz"
    #   run: |
    #     scp toolchain-${{ matrix.host }}-${{ matrix.target }}-linux-gnu.tar.xz "cicd@d1.h4.cx:/var/www/woz.io/relenv/${{ inputs.version }}/toolchain/${{ matrix.host }}/${{ matrix.target }}-linux-gnu.tar.xz"

    - name: Install `awscli`
      run: |
        pip3 install awscli

    - name: "Deploy Toolchain: ${{ matrix.host }}/${{ matrix.target }}-linux-gnu.tar.xz"
      run: |
        aws s3 cp release-artifacts/* s3://salt-project-test-salt-artifacts-release/relenv/${{ inputs.version }}/toolchain/${{ matrix.host }}/${{ matrix.target }}-linux-gnu.tar.xz"
  